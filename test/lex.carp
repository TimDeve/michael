(load "Test.carp")

(load "../sheriff.carp")

(use Test)

(use Sheriff.JSON.Lexer)
(use Sheriff.JSON.Lexer.Token)

(deftest test
  (assert-equal test
    "(Success [(LeftCurly) (RightCurly)])"
    &(str &(lex "{}"))
    "Lex curly braces")

  (assert-equal test
    "(Success [(LeftBracket) (RightBracket)])"
    &(str &(lex "[]"))
    "Lex square bracket")

  (assert-equal test
    "(Success [(Str @\"Strong\")])"
    &(str &(lex "\"Strong\""))
    "Lex string")

  (assert-equal test
    "(Success [(LeftCurly) (Str @\"key\") (Colon) (Str @\"value\") (RightCurly)])"
    &(str &(lex "{\"key\": \"value\"}"))
    "Lex string kv")

  (assert-equal test
    "(Error @\"Unmatched double-quote\")"
    &(str &(lex "\"AAAAAAAAAAA"))
    "Get error for unclosed double quotes")

  (assert-equal test
    "(Success [(LeftCurly) (Str @\"key\") (Colon) (Num @\"1.23\")])"
    &(str &(lex "{\"key\": 1.23}"))
    "with number")

  (assert-equal test
    "(Success [(LeftCurly) (Str @\"key\") (Colon) (Num @\"1e10\")])"
    &(str &(lex "{\"key\": 1e10}"))
    "with numbers with exponents")

  (assert-equal test
    "(Error @\"Unexpected end of input\")"
    &(str &(lex "{\"key\": 1e10"))
    "Get error for unexpected end of output for number"))

