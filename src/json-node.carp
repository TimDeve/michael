(register-type SheriffJsonNodeBox "void*")
(defmodule SheriffJsonNodeBox
  (sig prn (Fn [(Ref SheriffJsonNodeBox)] String))
  (defn prn [bx] @"SheriffJsonNodeBox")
  (implements prn SheriffJsonNodeBox.prn)

  (deftemplate copy (Fn [(Ref SheriffJsonNodeBox)] SheriffJsonNodeBox)
                    "void* $NAME(void** pptr)"
                    "$DECL {
                       SheriffJsonNode *box = (SheriffJsonNode*)CARP_MALLOC(sizeof(SheriffJsonNode));
                       assert(box);
                       *box = SheriffJsonNode_copy((SheriffJsonNode*)*pptr);
                       return box;
                    }")
  (implements copy SheriffJsonNodeBox.copy)

  (deftemplate delete (Fn [SheriffJsonNodeBox] ())
                    "void $NAME(void* bx)"
                    "$DECL {
                       SheriffJsonNode_delete(*(SheriffJsonNode*)bx);
                       CARP_FREE(bx);
                     }")
  (implements delete SheriffJsonNodeBox.delete))

(deftype SheriffJsonNode
 (Num [Double])
 (Arr [(Array SheriffJsonNodeBox)])
 (Obj [(Map String SheriffJsonNodeBox)])
 (Str [String])
 (Bol [Bool])
 Null)

(defmodule SheriffJsonNodeBox
  (deftemplate box (Fn [SheriffJsonNode] SheriffJsonNodeBox)
                   "void* $NAME(SheriffJsonNode some)"
                   "$DECL {
                      SheriffJsonNode *box = (SheriffJsonNode*)CARP_MALLOC(sizeof(SheriffJsonNode));
                      assert(box);
                      *box = some;
                      return box;
                    }")

  (deftemplate unbox (Fn [SheriffJsonNodeBox] SheriffJsonNode)
                     "SheriffJsonNode $NAME(void* box)"
                     "$DECL {
                        SheriffJsonNode some = *((SheriffJsonNode*)box);
                        free(box);
                        return some;
                      }")

  (deftemplate peek (Fn [(Ref SheriffJsonNodeBox)] (Ref SheriffJsonNode))
                    "SheriffJsonNode* $NAME(void** boxptr)"
                    "$DECL {
                       return *boxptr;
                     }")

  (defn zero [] (box (SheriffJsonNode.Null)))
  (implements zero SheriffJsonNodeBox.zero))

